var gulp = require('gulp'),
	plumber = require('gulp-plumber'),
	rename = require('gulp-rename'),
	concat = require('gulp-concat'),
	uglify = require('gulp-uglify'),
	imagemin = require('gulp-imagemin'),
	cache = require('gulp-cache'),
	minifycss = require('gulp-minify-css'),
	sass = require('gulp-sass'),
	sourcemaps = require('gulp-sourcemaps'),
	jade = require('gulp-jade'),
	browserSync = require('browser-sync');

gulp.task('browser-sync', function() {
  browserSync({
    server: {
       baseDir: "./",
	   proxy: "localhost:3000"
    }
  });
});

gulp.task('bs-reload', function () {
  browserSync.reload();
});

gulp.task('images', function(){
  gulp.src('images/**/*.{gif,jpg,png,svg}')
    .pipe(cache(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true })))
    .pipe(gulp.dest('content/images/'));
});

gulp.task('styles', function(){
  gulp.src(['styles/**/*.sass'])
    .pipe(plumber({
      errorHandler: function (error) {
        console.log(error.message);
        this.emit('end');
    }}))
	.pipe(sourcemaps.init())
    .pipe(sass({indentedSyntax: true}))
    .pipe(gulp.dest('content/styles/'))
    .pipe(rename({suffix: '.min'}))
    .pipe(minifycss())
	.pipe(sourcemaps.write())
    .pipe(gulp.dest('content/styles/'))
    .pipe(browserSync.reload({stream:true}))
});

gulp.task('templates', function () {
  return gulp.src('templates/**/!(_)*.jade')
    .pipe(jade({pretty: true}))
    .pipe(gulp.dest(''))
});

gulp.task('scripts', function(){
  return gulp.src('bower_components/**/*.js')
    .pipe(plumber({
      errorHandler: function (error) {
        console.log(error.message);
        this.emit('end');
    }}))
    .pipe(concat('main.js'))
    .pipe(gulp.dest('scripts/'))
    .pipe(rename({suffix: '.min'}))
    .pipe(uglify())
    .pipe(gulp.dest('scripts/'))
    .pipe(browserSync.reload({stream:true}))
});

gulp.task('default', ['browser-sync'], function(){
  gulp.watch('styles/**/*.sass', ['styles']);
  gulp.watch('templates/**/*.jade',['templates']);
  gulp.watch('*.html', ['bs-reload']);
  //gulp.watch("bower_components/**/*.js", ['scripts']);
});
